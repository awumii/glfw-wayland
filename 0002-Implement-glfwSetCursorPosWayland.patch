From cc8f9f48bc4fa7c79b06154567f5cfb841741f66 Mon Sep 17 00:00:00 2001
From: awumii <awumii@protonmail.com>
Date: Tue, 9 Sep 2025 21:41:36 +0200
Subject: [PATCH] Wayland: Partially implement `glfwSetCursorPos`

Patch created by Friz64, modified to fix cursor visibility bug, original PR can be found at
https://github.com/glfw/glfw/pull/2496

---
 src/wl_platform.h |  2 ++
 src/wl_window.c   | 39 +++++++++++++++++++++++++++++++++++++--
 2 files changed, 39 insertions(+), 2 deletions(-)

diff --git a/src/wl_platform.h b/src/wl_platform.h
index c3e45693..d8439fed 100644
--- a/src/wl_platform.h
+++ b/src/wl_platform.h
@@ -372,6 +372,7 @@ typedef struct _GLFWwindowWayland
         GLFWbool                iconified;
         GLFWbool                activated;
         GLFWbool                fullscreen;
+        double                  cursorPosX, cursorPosY;
     } pending;
 
     struct {
@@ -387,6 +388,7 @@ typedef struct _GLFWwindowWayland
 
     _GLFWcursor*                currentCursor;
     double                      cursorPosX, cursorPosY;
+    GLFWbool                    pendingCursorPos;
 
     char*                       appId;
 
diff --git a/src/wl_window.c b/src/wl_window.c
index 4220d17e..36ab35fc 100644
--- a/src/wl_window.c
+++ b/src/wl_window.c
@@ -2721,8 +2721,36 @@ void _glfwGetCursorPosWayland(_GLFWwindow* window, double* xpos, double* ypos)
 
 void _glfwSetCursorPosWayland(_GLFWwindow* window, double x, double y)
 {
-    _glfwInputError(GLFW_FEATURE_UNAVAILABLE,
-                    "Wayland: The platform does not support setting the cursor position");
+    if (!_glfw.wl.pointerConstraints)
+    {
+        _glfwInputError(GLFW_FEATURE_UNAVAILABLE,
+                        "Wayland: The compositor does not support setting the cursor position");
+        return;
+    }
+
+    if (window->wl.lockedPointer) {
+        zwp_locked_pointer_v1_set_cursor_position_hint(window->wl.lockedPointer,
+                                                       wl_fixed_from_double(x),
+                                                       wl_fixed_from_double(y));
+    } else {
+        // The cursor is not currently locked, but it may be locked later. Either
+        // - the application has already set the cursor mode to GLFW_CURSOR_DISABLED,
+        //   but the cursor is currently outside of the window, or
+        // - the application has not yet set the cursor mode to GLFW_CURSOR_DISABLED,
+        //   but will do so soon.
+        // Defer setting the cursor position to _glfwSetCursorWayland.
+        window->wl.pending.cursorPosX = x;
+        window->wl.pending.cursorPosY = y;
+        window->wl.pendingCursorPos = GLFW_TRUE;
+
+        if (window->wl.lockedPointer)
+        {
+            zwp_locked_pointer_v1_set_cursor_position_hint(window->wl.lockedPointer,
+                                                           wl_fixed_from_double(x),
+                                                           wl_fixed_from_double(y));
+            window->wl.pendingCursorPos = GLFW_FALSE;
+        }
+    }
 }
 
 void _glfwSetCursorModeWayland(_GLFWwindow* window, int mode)
@@ -3063,6 +3091,13 @@ void _glfwSetCursorWayland(_GLFWwindow* window, _GLFWcursor* cursor)
             unconfinePointer(window);
         if (!window->wl.lockedPointer)
             lockPointer(window);
+
+        if (window->wl.pendingCursorPos == GLFW_TRUE) {
+            zwp_locked_pointer_v1_set_cursor_position_hint(window->wl.lockedPointer,
+                wl_fixed_from_double(window->wl.pending.cursorPosX),
+                wl_fixed_from_double(window->wl.pending.cursorPosY));
+            window->wl.pendingCursorPos = GLFW_FALSE;
+        }
     }
     else if (window->cursorMode == GLFW_CURSOR_CAPTURED)
     {
-- 
2.51.0

